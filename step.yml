#
# A couple of useful guides & docs:
#
# - Main Bitrise CLI docs: https://github.com/bitrise-io/bitrise/tree/master/_docs
# - Step Development Guideline: https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
# - Bitrise.yml format spec: https://github.com/bitrise-io/bitrise/blob/master/_docs/bitrise-yml-format-spec.md
# - Bitrise docs: http://devcenter.bitrise.io/
# - Bitrise CLI guides: http://devcenter.bitrise.io/bitrise-cli/

title: |-
  Crashlytics dSYM upload
summary: |
  Upload dSYM file to Firebase
description: |
  Upload dSYM file to Firebase
website: https://github.com/anton-onizhuk/bitrise-step-crashlytics-dsym-upload
source_code_url: https://github.com/anton-onizhuk/bitrise-step-crashlytics-dsym-upload
support_url: https://github.com/anton-onizhuk/bitrise-step-crashlytics-dsym-upload/issues
host_os_tags:
  - osx-10.10
  - ubuntu-16.04

# If this step should be available only for certain project types
# just uncomment this `project_type_tags` section and include all the
# project types supported by the step. If the step can be used for all
# project types then you can just remove this section.
# If no `project_type_tags` specified (or specified as an empty array)
# that means the step can be used for any project type.
# You can find more information about project type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
#
project_type_tags:
  - ios
  - macos

# Type tags are used for categorizing steps, for easier step discovery in Step Libraries.
# You can find more information about type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
type_tags:
  - deploy

is_requires_admin_user: false
is_always_run: false
is_skippable: false
run_if: ""

toolkit:
  bash:
    entry_file: step.sh


inputs:
  - executable_path: "${BITRISE_SOURCE_DIR}/Pods/Fabric/upload-symbols"
    opts:
      title: "Fabric executable"
      summary: Command to run the `upload-symbols` executable.
      description: |
        Command to run the Fabric `upload-symbols` executable. 
        Usually it's located in Fabric pod directory. For example: `$ROOT/Pods/Fabric/upload-symbols`.
      is_expand: true
      is_required: true

  - google_service_plist: "${BITRISE_SOURCE_DIR}/Speechify/Supporting Files/GoogleService-Info.plist"
    opts:
      title: "GoogleService-Info.plist"
      summary: Path to the proejcts `GoogleService-Info.plist` file that contains required API tokens.
      description: |
        Path to the proejcts `GoogleService-Info.plist` file that contains required API tokens.
      is_expand: true
      is_required: true

  - dsym_dirs: "${BITRISE_DSYM_DIR_PATH}"
    opts:
      title: "dSYM files path"
      summary: Path to the dSYM files.
      description: |
        Path to the dSYM files.
      is_expand: true
      is_required: true

# outputs:
  # - EXAMPLE_STEP_OUTPUT:
  #   opts:
  #     title: "Example Step Output"
  #     summary: Summary. No more than 2-3 sentences.
  #     description: |
  #       Description of this output.

  #       Can be Markdown formatted text.
